#!/bin/bash
#
# https://github.com/unusedPhD/bash-skeleton/blob/master/starter.sh
set -ex

if [ -z "$1" ]; then
    echo "
    usage: $0 machine 
      -f force
      -k ssh key for root
      
    "
    exit 1
fi
    
PROXY='http://pisa:3142/'
MDIR=/var/lib/machines
MNAME=$1
user=$SUDO_USER


if [ ! -z "$2" ]; then
    MDIR=$2
fi    
MM=$MDIR/$MNAME

debootstrap --include systemd-container,openssh-server buster $MM \
  $PROXY"deb.debian.org/debian/"

echo 'Acquire::http { Proxy "'$PROXY'"; };' > \
  $MM/etc/apt/apt.conf.d/01aptcacherng
sed -i 's/https/http/' $MM/etc/apt/sources.list
echo $MNAME > $MM/etc/hostname

#ssh-key for root access
mkdir $MM/root/.ssh
cp --preserve=mode /home/$user/.ssh/id_rsa.pub $MM/root/.ssh/authorized_keys
#TODO /etc/hosts
systemd-nspawn -UM $MNAME systemctl enable systemd-networkd
systemctl enable systemd-nspawn@$MNAME
systemctl start systemd-nspawn@$MNAME

#
# hostname zu IP wird von systemd-network und dem NSS modul von machinectl
# gehandlet?  /etc/nsswitch.conf mymachines
#
